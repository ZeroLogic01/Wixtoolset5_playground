<UserControl x:Class="InstallerUI.Views.SearchSQLServerInstancesView"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:properties="clr-namespace:InstallerUI.Properties"
            xmlns:rules="clr-namespace:InstallerUI.ValidationRules"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:system="clr-namespace:System;assembly=mscorlib"
            xmlns:enums="clr-namespace:InstallerUI.Enums"
            xmlns:helpers="clr-namespace:InstallerUI.Helpers"
            xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:convertors="clr-namespace:InstallerUI.Convertors"
             d:DesignHeight="314"
             d:DesignWidth="601"
             mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/InstallerUI;component/Resources/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <convertors:EnumDescriptionConverter x:Key="enumDescriptionConvertor" />
            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConvertor"/>
            <convertors:BooleanToButtonContentConvertor x:Key="InverseBoolConverter"/>
            <!--<enums:AuthenticationTypeEnum x:Key="authenticationTypeEnum"/>-->
            <ObjectDataProvider MethodName="GetValues"
                    ObjectType="{x:Type system:Enum}"
                    x:Key="AuthenticationTypeDataProvider">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enums:AuthenticationTypeEnum" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider MethodName="GetValues"
                 ObjectType="{x:Type system:Enum}"
                 x:Key="BooleanTypeDataProvider">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enums:BooleanEnum" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Grid.Resources>
            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
        </Grid.Resources>
        <TextBlock
         Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0"
         HorizontalAlignment="Stretch"
         Style="{StaticResource H1}"
         Text="{x:Static properties:Resources.ConfigureSqlServerInstance}" />

        <Grid Grid.Column="0"
             Grid.ColumnSpan="3"
             Grid.Row="1"
             HorizontalAlignment="Stretch"
             VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" MaxWidth="300" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <ScrollViewer Grid.Column="0" Grid.Row="0"
                          VerticalScrollBarVisibility="Auto" 
                          VerticalAlignment="Stretch">
                <StackPanel Orientation="Vertical" Margin="8,0,0,0" 
                            HorizontalAlignment="Stretch">

                    <ListBox x:Name="LocalInstancesListBox" Style="{StaticResource HeaderedListBoxStyle}" Tag="SQL Server Local Instances"
                   ItemsSource="{Binding LocallyInstalledInstances}"
                             SelectionChanged="LocalInstancesListBox_SelectionChanged"
                   Grid.Row="1" Grid.Column="1"/>
                    <!--<Separator/>-->
                    <ListBox x:Name="NetworkInstancesListBox" Style="{StaticResource HeaderedListBoxStyle}" Tag="SQL Server Network Instances"
                        ItemsSource="{Binding InstalledInstancesOnLocalNetwork}"
                             SelectionChanged="LocalInstancesListBox_SelectionChanged"
                        Grid.Row="1" Grid.Column="1"/>
                </StackPanel>
            </ScrollViewer>
            <Grid Grid.Row="0" Grid.Column="1" Margin="10 0 0 0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Server Name:" Margin="2.5 0 2.5 2.5" Grid.Row="0" Grid.Column="0"/>
                <TextBox x:Name="ServerNameTextBox" Margin="2.5 0 2.5 2.5" Grid.Row="0" Grid.Column="1">
                    <TextBox.Text>
                        <Binding
                             Mode="TwoWay"
                             NotifyOnValidationError="True"
                             Path="SqlServerInstanceName"
                             UpdateSourceTrigger="PropertyChanged"
                             ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <rules:NotEmptyValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock Text="Authentication:" Margin="2.5" Grid.Row="1" Grid.Column="0"/>
                <ComboBox x:Name="AuthenticationComboBox" 
                    ItemsSource="{Binding Source={StaticResource AuthenticationTypeDataProvider}, UpdateSourceTrigger=PropertyChanged}"
                    SelectedItem="{Binding SelectedAuthenticationType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Margin="2.5" Grid.Row="1" Grid.Column="1">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource enumDescriptionConvertor}}"></TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>


                <TextBlock Text="User Name:" Margin="2.5" Grid.Row="2" Grid.Column="0"/>
                <TextBox x:Name="UsernameTextBox"
                         IsEnabled="{Binding IsUserNamePasswordEnabled,UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                         Margin="2.5" Grid.Row="2" Grid.Column="1">
                    <TextBox.Text>
                        <Binding
                         Mode="TwoWay"
                         NotifyOnValidationError="True"
                         Path="UserName"
                         UpdateSourceTrigger="PropertyChanged"
                         ValidatesOnDataErrors="True">
                            <Binding.ValidationRules>
                                <rules:NotEmptyValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBlock Text="Password:" Margin="2.5" Grid.Row="3" Grid.Column="0"/>
                <PasswordBox x:Name="PasswordBox" Margin="2.5" Grid.Row="3" Grid.Column="1" 
                             IsEnabled="{Binding IsUserNamePasswordEnabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" 
                             helpers:PasswordBoxHelper.BoundPassword="{Binding SecurePassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             helpers:PasswordBoxHelper.BindPassword="True">
                    <PasswordBox.Style>
                        <Style TargetType="PasswordBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsUserNamePasswordEnabled}" Value="True">
                                    <Setter Property="Tag" Value="{Binding SecurePassword, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </PasswordBox.Style>
                    <PasswordBox.Tag>
                        <Binding Path="SecurePassword" Mode="TwoWay">
                            <Binding.ValidationRules>
                                <rules:NotEmptyValidationRule ValidationStep="RawProposedValue"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </PasswordBox.Tag>
                </PasswordBox>
                <TextBlock Text="Encrypt:" Margin="2.5" Grid.Row="4" Grid.Column="0"/>
                <ComboBox x:Name="EncryptComboBox" Margin="2.5" Grid.Row="4" Grid.Column="1"
                    ItemsSource="{Binding Source={StaticResource BooleanTypeDataProvider}, UpdateSourceTrigger=PropertyChanged}"
                    SelectedItem="{Binding Encrypt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource enumDescriptionConvertor}}"></TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <TextBlock Text="Trust Server Certificate:" Margin="2.5" Grid.Row="5" Grid.Column="0"/>
                <ComboBox x:Name="TrustServerCertificateComboBox" Margin="2.5" Grid.Row="5" Grid.Column="1"
                    ItemsSource="{Binding Source={StaticResource BooleanTypeDataProvider}, UpdateSourceTrigger=PropertyChanged}"
                    SelectedItem="{Binding TrustServerCertificate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource enumDescriptionConvertor}}"></TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBlock Text="Database Name:" Margin="2.5" Grid.Row="6" Grid.Column="0"/>
                <ComboBox x:Name="DatabasesComboBox" Margin="2.5" Grid.Row="6" Grid.Column="1"
                          IsEditable="True" 
                          DropDownOpened="DatabasesComboBox_DropDownOpened"
                          SelectedItem="{Binding SelectedDatabaseName, Mode=TwoWay}"
                    ItemsSource="{Binding DatabaseNames, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                          >
                </ComboBox>



            </Grid>


        </Grid>

        <StackPanel
         Grid.Column="2"
         Grid.Row="2"
         HorizontalAlignment="Right"
         Margin="0,0,0,0"
         Orientation="Horizontal"
         VerticalAlignment="Bottom">
            <Button
             Command="{Binding Path=BackBtnCommand, UpdateSourceTrigger=PropertyChanged}"
             Content="{x:Static properties:Resources.BackBtn}"
             Height="30"
             Margin="0,10,0,0"
             Style="{DynamicResource BtnDefault}"
             Width="100" />
            <Button
             Command="{Binding Path=NextBtnCommand}"
             Content="{x:Static properties:Resources.NextBtn}"
             Height="30" Style="{StaticResource BtnDefault}"
             Margin="10,10,0,0"
             Width="100">
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
