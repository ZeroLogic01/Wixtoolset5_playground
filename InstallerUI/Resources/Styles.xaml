<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <FontFamily x:Key="NunitoBold">/InstallerUI;component/Assets/Fonts/#Nunito</FontFamily>

    <SolidColorBrush Color="#1794E0" x:Key="PrimaryColorBrush" />
    <SolidColorBrush Color="#AA888888" x:Key="PrimaryOpacityMask" />
    <SolidColorBrush Color="#0E3F6C" x:Key="PrimaryFontColor"/>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColor}"/>
    </Style>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColor}"/>
    </Style>
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColor}"/>
    </Style>
    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColor}"/>
    </Style>


    <!--  Styles  -->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="BtnDefault">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <!--<Setter Property="BorderBrush" Value="#74AD44"/>-->
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            x:Name="Border" />

                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="OpacityMask" Value="{StaticResource PrimaryOpacityMask}" />
                            <Setter Property="Margin" Value="2,1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Background" Value="#1FA3FF" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter Property="OpacityMask" Value="{StaticResource PrimaryOpacityMask}"/>-->
                            <Setter Property="Foreground" Value="#E0E0E0" />
                            <!--  Light gray for text  -->
                            <Setter Property="Opacity" Value="0.6" />
                            <!--  Slight transparency for disabled  -->
                            <Setter Property="Effect" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Window Control Button  -->
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <TextBlock
                            HorizontalAlignment="Center"
                            Text="{TemplateBinding Content}"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="OpacityMask" Value="{StaticResource PrimaryOpacityMask}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#10497E" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!--  Window Close Button  -->
    <Style
        BasedOn="{StaticResource WindowControlButton}"
        TargetType="{x:Type Button}"
        x:Key="WindowCloseButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        CornerRadius="0 0 0 0"
                        Padding="{TemplateBinding Padding}">
                        <TextBlock
                            HorizontalAlignment="Center"
                            Text="{TemplateBinding Content}"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="ProgressBar">
        <Setter Property="Height" Value="20" />
        <Setter Property="Margin" Value="5" />
    </Style>
    <Style TargetType="ProgressBar" x:Key="ProgressBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border
                        Background="#E4F4FC"
                        BorderThickness="0"
                        CornerRadius="4"
                        Height="20"
                        Padding="1">
                        <Grid x:Name="PART_Track">
                            <Rectangle
                                HorizontalAlignment="Left"
                                RadiusX="5"
                                RadiusY="5"
                                x:Name="PART_Indicator">
                                <Rectangle.Fill>
                                    <!--<LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                        <GradientStop Color="{StaticResource PrimaryColorBrush}" Offset="0" />
                                        <GradientStop Color="#A4D5F8" Offset="1.0" />
                                    </LinearGradientBrush>-->
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Color="#0D7BC1" Offset="0.0" />
                                        <GradientStop Color="#1794E0" Offset="0.5" />
                                        <GradientStop Color="#1FB0FF" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Thumb}" x:Key="ScrollBarThumb">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Background="{StaticResource PrimaryColorBrush}"
                        CornerRadius="3"
                        Height="{TemplateBinding Height}"
                        SnapsToDevicePixels="True"
                        Width="{TemplateBinding Width}"
                        x:Name="rectangle" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Margin" Value="-14,0,0,0" />
        <Setter Property="MinWidth" Value="{Binding Width, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid
                        Background="Transparent"
                        SnapsToDevicePixels="true"
                        x:Name="Bg">

                        <Border Padding="0,4">
                            <Track
                                HorizontalAlignment="Center"
                                IsDirectionReversed="true"
                                IsEnabled="{TemplateBinding IsMouseOver}"
                                Width="6"
                                x:Name="PART_Track">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Opacity="0" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Opacity="0" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="14" />
                <Setter Property="MinHeight" Value="{Binding Height, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Margin" Value="0,-14,0,0" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid SnapsToDevicePixels="true" x:Name="Bg">
                                <Track
                                    Height="6"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    x:Name="PART_Track">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Opacity="0" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Opacity="0" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}" x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle
                            Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                            Grid.Column="1"
                            Grid.Row="1"
                            x:Name="Corner" />
                        <ScrollContentPresenter
                            CanContentScroll="{TemplateBinding CanContentScroll}"
                            CanHorizontallyScroll="False"
                            CanVerticallyScroll="False"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Grid.Column="0"
                            Grid.Row="0"
                            Margin="{TemplateBinding Padding}"
                            x:Name="PART_ScrollContentPresenter" />

                        <ScrollBar
                            AutomationProperties.AutomationId="VerticalScrollBar"
                            Cursor="Arrow"
                            Grid.Column="1"
                            Grid.Row="0"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Minimum="0"
                            Opacity="0.2"
                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            x:Name="PART_VerticalScrollBar" />

                        <ScrollBar
                            AutomationProperties.AutomationId="HorizontalScrollBar"
                            Cursor="Arrow"
                            Grid.Column="0"
                            Grid.Row="1"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Minimum="0"
                            Opacity="0.2"
                            Orientation="Horizontal"
                            Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            x:Name="PART_HorizontalScrollBar" />

                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Duration="0:0:0.3"
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="1" />
                                    <DoubleAnimation
                                        Duration="0:0:0.3"
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Duration="0:0:0.3"
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2" />
                                    <DoubleAnimation
                                        Duration="0:0:0.3"
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Define ListBox style -->
    <Style x:Key="HeaderedListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <StackPanel>
                        <TextBlock Text="{TemplateBinding Tag}" FontWeight="Bold" 
                                   FontFamily="{StaticResource NunitoBold}" 
                                   Margin="0,0,0,5" Foreground="{StaticResource PrimaryFontColor}"/>
                        <ItemsPresenter/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColor}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,0,6" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="H1">
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColor}" />
        <Setter Property="FontSize" Value="28" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Margin" Value="0,0,0,10" />

    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="H2">
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColor}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Margin" Value="0,0,0,8" />

    </Style>

    <SolidColorBrush Color="#0E3F6C" x:Key="TextBox.Static.Border" />
    <SolidColorBrush Color="#155A96" x:Key="TextBox.MouseOver.Border" />
    <SolidColorBrush Color="#1A66B3" x:Key="TextBox.Focus.Border" />
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColor}" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0"
                        SnapsToDevicePixels="True"
                        x:Name="border">
                        <ScrollViewer
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"
                            x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="Validation.HasError" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="true" />
                                <Condition Property="Validation.HasError" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>

            <!--  The tool tip for the TextBox to display the validation error message.  -->
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <StackPanel>
                                <AdornedElementPlaceholder x:Name="placeholder" />
                                <TextBlock
                                    FontSize="11"
                                    Foreground="Red"
                                    Padding="0,4,0,0">
                                    <Run Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                                    <!--<Run>*</Run>-->
                                </TextBlock>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="Red" />

            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="BulletTemplate" TargetType="{x:Type ContentControl}">
        <BulletDecorator>
            <BulletDecorator.Bullet>
                <Ellipse Height="8" Width="8" Fill="#444"/>
            </BulletDecorator.Bullet>
            <ContentPresenter />
        </BulletDecorator>
    </ControlTemplate>
</ResourceDictionary>